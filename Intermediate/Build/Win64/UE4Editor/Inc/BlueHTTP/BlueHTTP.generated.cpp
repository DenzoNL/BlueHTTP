// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/BlueHTTPPrivatePCH.h"
#include "GeneratedCppIncludes.h"
#include "BlueHTTP.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1BlueHTTP() {}
class UScriptStruct* FBlueHTTPConfigStruct::StaticStruct()
{
	extern BLUEHTTP_API class UPackage* Z_Construct_UPackage__Script_BlueHTTP();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern BLUEHTTP_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueHTTPConfigStruct();
		extern BLUEHTTP_API uint32 Get_Z_Construct_UScriptStruct_FBlueHTTPConfigStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueHTTPConfigStruct, Z_Construct_UPackage__Script_BlueHTTP(), TEXT("BlueHTTPConfigStruct"), sizeof(FBlueHTTPConfigStruct), Get_Z_Construct_UScriptStruct_FBlueHTTPConfigStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueHTTPConfigStruct(FBlueHTTPConfigStruct::StaticStruct, TEXT("/Script/BlueHTTP"), TEXT("BlueHTTPConfigStruct"), false, nullptr, nullptr);
static struct FScriptStruct_BlueHTTP_StaticRegisterNativesFBlueHTTPConfigStruct
{
	FScriptStruct_BlueHTTP_StaticRegisterNativesFBlueHTTPConfigStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueHTTPConfigStruct")),new UScriptStruct::TCppStructOps<FBlueHTTPConfigStruct>);
	}
} ScriptStruct_BlueHTTP_StaticRegisterNativesFBlueHTTPConfigStruct;
	void UBlueHTTPBPLibrary::StaticRegisterNativesUBlueHTTPBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlueHTTPBPLibrary::StaticClass(), "BlueHTTPGetConfig",(Native)&UBlueHTTPBPLibrary::execBlueHTTPGetConfig);
		FNativeFunctionRegistrar::RegisterFunction(UBlueHTTPBPLibrary::StaticClass(), "BlueHTTPRequest",(Native)&UBlueHTTPBPLibrary::execBlueHTTPRequest);
		FNativeFunctionRegistrar::RegisterFunction(UBlueHTTPBPLibrary::StaticClass(), "BlueHTTPSetConfig",(Native)&UBlueHTTPBPLibrary::execBlueHTTPSetConfig);
	}
	IMPLEMENT_CLASS(UBlueHTTPBPLibrary, 3006554667);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	BLUEHTTP_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueHTTPConfigStruct();
	BLUEHTTP_API class UFunction* Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPGetConfig();
	BLUEHTTP_API class UFunction* Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPRequest();
	BLUEHTTP_API class UFunction* Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPSetConfig();
	BLUEHTTP_API class UClass* Z_Construct_UClass_UBlueHTTPBPLibrary_NoRegister();
	BLUEHTTP_API class UClass* Z_Construct_UClass_UBlueHTTPBPLibrary();
	BLUEHTTP_API class UPackage* Z_Construct_UPackage__Script_BlueHTTP();
	UScriptStruct* Z_Construct_UScriptStruct_FBlueHTTPConfigStruct()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_BlueHTTP();
		extern uint32 Get_Z_Construct_UScriptStruct_FBlueHTTPConfigStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("BlueHTTPConfigStruct"), sizeof(FBlueHTTPConfigStruct), Get_Z_Construct_UScriptStruct_FBlueHTTPConfigStruct_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueHTTPConfigStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBlueHTTPConfigStruct>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(PrintResponse, FBlueHTTPConfigStruct, bool);
			UProperty* NewProp_PrintResponse = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PrintResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(PrintResponse, FBlueHTTPConfigStruct), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(PrintResponse, FBlueHTTPConfigStruct), sizeof(bool), true);
			UProperty* NewProp_BuildId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BuildId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BuildId, FBlueHTTPConfigStruct), 0x0010000000000005);
			UProperty* NewProp_ApiKey = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ApiKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ApiKey, FBlueHTTPConfigStruct), 0x0010000000000005);
			UProperty* NewProp_Url = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Url"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Url, FBlueHTTPConfigStruct), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("*      Function library class.\n*      Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.\n*\n*      When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.\n*      BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.\n*      BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.\n*      DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.\n*                              Its lets you name the node using characters not allowed in C++ function names.\n*      CompactNodeTitle - the word(s) that appear on the node.\n*      Keywords -      the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu.\n*                              Good example is \"Print String\" node which you can find also by using keyword \"log\".\n*      Category -      the category your node will be under in the Blueprint drop-down menu.\n*\n*      For more info on custom blueprint nodes visit documentation:\n*      https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation"));
			MetaData->SetValue(NewProp_PrintResponse, TEXT("Category"), TEXT("BlueHTTP Config Struct"));
			MetaData->SetValue(NewProp_PrintResponse, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
			MetaData->SetValue(NewProp_BuildId, TEXT("Category"), TEXT("BlueHTTP Config Struct"));
			MetaData->SetValue(NewProp_BuildId, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
			MetaData->SetValue(NewProp_ApiKey, TEXT("Category"), TEXT("BlueHTTP Config Struct"));
			MetaData->SetValue(NewProp_ApiKey, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
			MetaData->SetValue(NewProp_Url, TEXT("Category"), TEXT("BlueHTTP Config Struct"));
			MetaData->SetValue(NewProp_Url, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBlueHTTPConfigStruct_CRC() { return 2391286624U; }
	UFunction* Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPGetConfig()
	{
		struct BlueHTTPBPLibrary_eventBlueHTTPGetConfig_Parms
		{
			FBlueHTTPConfigStruct ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlueHTTPBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueHTTPGetConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BlueHTTPBPLibrary_eventBlueHTTPGetConfig_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, BlueHTTPBPLibrary_eventBlueHTTPGetConfig_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FBlueHTTPConfigStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BlueHTTP"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Get Config"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Get the configuration used"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPRequest()
	{
		struct BlueHTTPBPLibrary_eventBlueHTTPRequest_Parms
		{
			FString MetricName;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UBlueHTTPBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueHTTPRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BlueHTTPBPLibrary_eventBlueHTTPRequest_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Value, BlueHTTPBPLibrary_eventBlueHTTPRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MetricName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MetricName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MetricName, BlueHTTPBPLibrary_eventBlueHTTPRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BlueHTTP"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Submit Metric"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Submit User Metric Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPSetConfig()
	{
		struct BlueHTTPBPLibrary_eventBlueHTTPSetConfig_Parms
		{
			FBlueHTTPConfigStruct Config;
		};
		UObject* Outer=Z_Construct_UClass_UBlueHTTPBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BlueHTTPSetConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(BlueHTTPBPLibrary_eventBlueHTTPSetConfig_Parms));
			UProperty* NewProp_Config = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Config"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Config, BlueHTTPBPLibrary_eventBlueHTTPSetConfig_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FBlueHTTPConfigStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BlueHTTP"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Set Config"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("Set the configuration used"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBlueHTTPBPLibrary_NoRegister()
	{
		return UBlueHTTPBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlueHTTPBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_BlueHTTP();
			OuterClass = UBlueHTTPBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPGetConfig());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPRequest());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPSetConfig());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPGetConfig(), "BlueHTTPGetConfig"); // 3976400789
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPRequest(), "BlueHTTPRequest"); // 161727489
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlueHTTPBPLibrary_BlueHTTPSetConfig(), "BlueHTTPSetConfig"); // 3501346179
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BlueHTTPBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BlueHTTPBPLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlueHTTPBPLibrary(Z_Construct_UClass_UBlueHTTPBPLibrary, &UBlueHTTPBPLibrary::StaticClass, TEXT("UBlueHTTPBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlueHTTPBPLibrary);
	UPackage* Z_Construct_UPackage__Script_BlueHTTP()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/BlueHTTP")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0x4A415AC7;
			Guid.B = 0x1D4D0B0D;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
